#!/usr/bin/env python3
# hvformat=true
import argparse
import re
import subprocess

BRANCH_RE = re.compile(r"""^(?:.*/)?(ch|sc-)(?P<story>\d+)(?:/.*)?$""")
CUT_MARK = "# ------------------------ >8 ------------------------"


def main():
    args = parse_args()
    branch = parse_branch_name()

    story = branch.get("story")
    if not story:
        return

    with open(args.filename, mode="r") as f:
        lines = f.readlines()

    url = "https://app.shortcut.com/hirevue/story/" + story + "/"
    head, tail = split_commit_message(lines)
    for line in head:
        if line.startswith("#"):
            continue
        if url in line:
            return

    head.append("\n")
    head.append(f"Story: [sc-{story}]({url})")
    head.append("\n\n")
    with open(args.filename, mode="w") as f:
        f.writelines(head)
        f.writelines(tail)


def get_branch_name():
    p = subprocess.run(
        ["git", "symbolic-ref", "--short", "HEAD"],
        check=True,
        stdout=subprocess.PIPE,
        universal_newlines=True,
    )
    return p.stdout.strip()


def parse_args():
    parser = argparse.ArgumentParser(description="Prepare a commit message.")
    parser.add_argument("filename")
    parser.add_argument(
        "source",
        nargs="?",
        choices=["message", "template", "merge", "squash", "commit"],
    )
    parser.add_argument("sha", nargs="?")
    return parser.parse_args()


def parse_branch_name():
    branch_name = get_branch_name()
    m = BRANCH_RE.match(branch_name)
    if not m:
        return {}
    return m.groupdict()


def split_commit_message(lines):
    middle = len(lines)
    for n, line in enumerate(lines):
        if line.startswith(CUT_MARK):
            middle = n
    while middle > 0:
        if not lines[middle - 1].startswith("#"):
            break
        middle = middle - 1
    return lines[:middle], lines[middle:]


if __name__ == "__main__":
    # It is preferable to fail silently instead of
    # completely breaking git.
    try:
        main()
    except:  # pylint: disable=W0702
        pass
